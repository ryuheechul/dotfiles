## basics

# helper function to give feedback about configurations
function _echo() {
  if [[ -z $SILENT_FEEDBACK_ZSHRC ]]; then
    echo $1
  fi
}

# prevent overriding unnecessarily in case it's being loaded again
if [[ -z $ALL_MY_ZSH_STUFF_LOADED ]] || [[ -n $FORCE_LOAD_MY_ZSH_STUFF ]]; then
  # in case of linux
  [ -d /home/linuxbrew/.linuxbrew/bin ] && export PATH=/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin:${PATH}

  # bootstrap terminal
  alias shellwe="cd && cd al && neofetch && ~/.local/bin/tmux-attach-or-new.sh default"

  # terminal and editor
  [[ $TMUX = "" ]] && export TERM="xterm-256color"
  export EDITOR=nvim

  # vi keybinding
  export KEYTIMEOUT=1
  bindkey -v

  # maintain this until https://github.com/ohmyzsh/ohmyzsh/pull/9750 is merged
  setopt auto_cd

  # enable reverse-i-search
  bindkey '^R' history-incremental-search-backward
fi

## to have an option of preventing loading things nested in tmux shell
# if TMUX var is not set then...
if [[ -z $TMUX ]]; then
  # if HOST_ALWAYS_USE_TMUX var is set then skip the rest
  if [[ -n $HOST_ALWAYS_USE_TMUX ]]; then
    # still give a chance to load if FORCE_LOAD_MY_ZSH_STUFF var is set
    if [[ -n $FORCE_LOAD_MY_ZSH_STUFF ]]; then
      _echo "\$HOST_ALWAYS_USE_TMUX is set but also \$FORCE_LOAD_MY_ZSH_STUFF is set too. Therefore keep loading."
    else
      _echo "skip loading the rest because \$HOST_ALWAYS_USE_TMUX is set"
      _echo "to prevent skipping, set \$FORCE_LOAD_MY_ZSH_STUFF"
      return
    fi
  # else - do nothing, therefore continue
  fi
fi

## now this is a one more circuit breaker in case of inside tmux
# if ALL_MY_ZSH_STUFF_LOADED var is set then...
if [[ -n $ALL_MY_ZSH_STUFF_LOADED ]]; then
  # but also if FORCE_LOAD_MY_ZSH_STUFF var is set then...
  if [[ -n $FORCE_LOAD_MY_ZSH_STUFF ]]; then
    _echo "\$ALL_MY_ZSH_STUFF_LOADED is set but also \$FORCE_LOAD_MY_ZSH_STUFF is set too. Therefore keep loading."
  else
    _echo "skip loading the rest because \$ALL_MY_ZSH_STUFF_LOADED is set"
    _echo "to prevent skipping, set \$FORCE_LOAD_MY_ZSH_STUFF"
    return
  fi
fi

## addons
#
# source from seperate files to organize better
export ADDON_D=~/.config/zshrc.d/my_addons
for source_file in zinit lf_icons aliases shell_ext
do
[ -f $ADDON_D/$source_file ] && source $ADDON_D/$source_file
done
unset ADDON_D


autoload -Uz compinit
for dump in ~/.zcompdump(N.mh+24); do
  compinit
done
compinit -C

# mark the status to prevent double loading
export ALL_MY_ZSH_STUFF_LOADED=1

unfunction _echo
