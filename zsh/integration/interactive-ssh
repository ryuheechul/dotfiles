# -*- mode: sh; -*- vim: set ft=zsh:

# meant to be sourced from ../zlogin

# there shouldn't be any `COLORTERM` set at this point but respect if it's already there
printenv COLORTERM > /dev/null || {
  # because `COLORTERM` doesn't inherit from client unlike `TERM`
  printenv TERM | grep -q 256color \
    && export COLORTERM=truecolor
}

# fallback to `en_US.UTF-8` - this prevents an warning message like below
# `bash: warning: setlocale: LC_ALL: cannot change locale (C.UTF-8): No such file or directory`
# due to darwin doesn't seem to come with "C.UTF-8" by default
test "${LC_ALL}" = "C.UTF-8" && export LC_ALL="en_US.UTF-8"

# wslg is very convinient locally but doesn't seem to support X11 forwarding with SSH - https://github.com/microsoft/vscode-remote-release/issues/6591
# so workaround with a method that I learned from https://taoofmac.com/space/til/2022/12/21/2000
# I made more detailed note about this at https://gist.github.com/ryuheechul/9515381570a0cea994e62647d92a864f#when-forwardx11-yes-doesnt-work

if test -z "${DISPLAY}"; then
  # in case of `ssh -R 6020:/tmp/.X11-unix/X0 [host]`
  # or `RemoteForward 6020 /tmp/.X11-unix/X0` in ~/.ssh/config
  if nc -zv localhost 6020 &> /dev/null; then
    export DISPLAY=:20

  # could be useful when having a complete control of the "remote host"
  # e.g. a direct VM guest that has some integration with the host machine
  # aka mimicking ForwardX11 (only) in terms of clipboard sharing
  # "local" is a relative term and here is being used in the perspective of the remote host
  elif test -n "${PREFER_LOCAL_DISPLAY_AS_FALLBACK}" && fastcommandcheck systemctl; then
    source "${my_zsh_d}/fn/linux"
    sourcesystemuserenv DISPLAY
    sourcesystemuserenv XAUTHORITY
  fi
fi

function is-connected-via-mosh () {
  pgrep -U $USER mosh-server > /dev/null && test -n "${SSH_TTY}" && ! test -c "${SSH_TTY}"
}

function is-in-tmux() {
  printenv TMUX > /dev/null
}
function can-use-tmux () {
  ! is-in-tmux
}

function should-use-zellij () {
  # not using zellij until the issue below is resolved
  #   - https://github.com/zellij-org/zellij/issues/2647
  return -1

  # consider opening `zellij` only if not running under `tmux` already and not connected via mosh
  can-use-tmux && ! is-connected-via-mosh
  # why not with mosh though?
  # - with mosh, x11 forwarding would not work
  # - with zellij, osc 52 (pasting) would not work at the moment
  #   - https://github.com/zellij-org/zellij/issues/2647
  # - and this is kind of OK as mosh is resilient to network disturbances
}

if is-connected-via-mosh;then
  # due to: https://github.com/theimpostor/osc/issues/7
  unset SSH_TTY
  # there is a supposedly a fix but it didn't work for me
  # https://gist.github.com/yudai/95b20e3da66df1b066531997f982b57b
fi

if should-use-zellij; then
  # prevent infinite session opening with the same name, 'ssh'
  zellij list-sessions \
    | grep ssh | head -n1 | sed 's/ (current)$//' \
    | grep -E '^ssh$' > /dev/null \
    && {
      echo 'an existing ssh session is found as below'
      zellij list-sessions
      echo 'attaching to zellij is being skipped to avoid potential nested sessions'
      echo 'you can still attach via `zellij attach ssh`...'
      sleep 3
    } || {
      echo 'Attempting to attach to zellij session and this might fail as zellij might be not stable'
      SSH_TTY= UNSET_ALL_MY_ZSH_STUFF_LOADED=1 exec "${my_dot_d}/bin/zellij-attach-or-new.sh" ssh
    }
elif can-use-tmux; then
  SSH_TTY= UNSET_ALL_MY_ZSH_STUFF_LOADED=1 exec "${my_dot_d}/bin/tmux-attach-or-new.sh" ssh
elif is-in-tmux; then
  tmux set status-position bottom

  # if it's not differentiated with gold color already, set it
  tmux show -gv @tmux_power_theme | grep gold > /dev/null || {
    tmux set -g @tmux_power_theme 'gold'
    tmux set -g @tmux_power_g2 "3" # to get along with 'gold'
    ~/.tmux/plugins/tpm/tpm # this applies the new theme
  }
  # unfortunately the above (with `-g` option) will affect all sessions but I don't use the same machine remotely and locally at the same time, so competing theme for non overlapping time is fine for me

  # override the status-right
  tmux set status-right '#(tmux-hud-r)'
fi
