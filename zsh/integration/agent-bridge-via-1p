# vim: set ft=zsh:

# this file is expected to be sourced via bash or zsh
# this is different from `./1p` which is a native way to integrate with 1password

# code mostly made/inspired by:
# - https://1password.community/discussion/128023/ssh-agent-on-windows-subsystem-for-linux
# - https://dev.to/d4vsanchez/use-1password-ssh-agent-in-wsl-2j6m

mkdir -p "${HOME}/.1p"

# Configure ssh forwarding
export SSH_AUTH_SOCK=$HOME/.1p/agent.sock
# need `ps -ww` to get non-truncated command for matching
# use square brackets to generate a regex match for the process we want but that doesn't match the grep command running it!
ALREADY_RUNNING=$(command ps -auxww | grep -q "[n]piperelay.exe -ei -s //./pipe/openssh-ssh-agent"; echo $?)
if [[ $ALREADY_RUNNING != "0" ]]; then
  if [[ -S $SSH_AUTH_SOCK ]]; then
    # not expecting the socket to exist as the forwarding command isn't running (http://www.tldp.org/LDP/abs/html/fto.html)
    echo "removing previous socket..."
    rm $SSH_AUTH_SOCK
  fi
  echo "Starting SSH-Agent relay..."
  # setsid to force new session to keep running
  # set socat to listen on $SSH_AUTH_SOCK and forward to npiperelay which then forwards to openssh-ssh-agent on windows
  (setsid socat UNIX-LISTEN:$SSH_AUTH_SOCK,fork EXEC:"npiperelay.exe -ei -s //./pipe/openssh-ssh-agent",nofork &) >/dev/null 2>&1
  # `npiperelay` can be installed via `choco install npiperelay`
fi

# run `ssh-add -l` to verify this is working
