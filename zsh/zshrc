# vim: set ft=zsh:

# escape hatches for editors (that can be opened via/and inside shell) that has has its own terminal emulator that runs will run this shell
test -n "${UNSET_MY_BASIC_ZSH_STUFF_LOADED}" && unset MY_BASIC_ZSH_STUFF_LOADED && unset UNSET_MY_BASIC_ZSH_STUFF_LOADED
test -n "${UNSET_ALL_MY_ZSH_STUFF_LOADED}"   && unset ALL_MY_ZSH_STUFF_LOADED   && unset UNSET_ALL_MY_ZSH_STUFF_LOADED
test -n "${UNSET_HOST_ALWAYS_USE_TMUX}"      && unset HOST_ALWAYS_USE_TMUX      && unset UNSET_HOST_ALWAYS_USE_TMUX

## basics

export my_zsh_d="${XDG_CONFIG_HOME}/dfs-rhc/zsh"
# to make sure my custom path supersedes default ones like /bin /usr/bin /usr/local/bin
float_nix_path=1 source "${my_zsh_d}/path/set-basic"

# helper function to give feedback about configurations
function _echo() {
  if [[ -z $SILENT_FEEDBACK_ZSHRC ]]; then
    echo $1
  fi
}

function _load_brew() {
  # in case of linux
  [ -x /home/linuxbrew/.linuxbrew/bin/brew ] && \
    eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)

  # in case of apple silicon
  [ -x /opt/homebrew/bin/brew ] && \
    eval $(/opt/homebrew/bin/brew shellenv)

  # in case of intel mac, it should already be loaded
}

# prevent overriding unnecessarily in case it's being loaded again
if [ -z "$MY_BASIC_ZSH_STUFF_LOADED" ] || [ -n "$FORCE_LOAD_MY_ZSH_STUFF" ]; then
  # to speed up SpaceVim startup time
  export PYTHON3_HOST_PROG=`command -v python3`

  _load_brew

  export EDITOR="nvim"

  # vi keybinding
  export KEYTIMEOUT=1

  # enable reverse-i-search
  bindkey '^R' history-incremental-search-backward

  export MY_BASIC_ZSH_STUFF_LOADED=1
fi

# maintain this until https://github.com/ohmyzsh/ohmyzsh/pull/9750 is merged
setopt auto_cd

## to have an option of preventing loading things nested in tmux shell
# if TMUX var is not set then...
if test -z "${TMUX}"; then
  # if HOST_ALWAYS_USE_TMUX var is set then skip the rest
  if test -n "${HOST_ALWAYS_USE_TMUX}"; then
    # still give a chance to load if FORCE_LOAD_MY_ZSH_STUFF var is set
    if test -n "${FORCE_LOAD_MY_ZSH_STUFF}"; then
      _echo "\$HOST_ALWAYS_USE_TMUX is set but also \$FORCE_LOAD_MY_ZSH_STUFF is set too. Therefore keep loading."
    else
      _echo "skip loading the rest because \$HOST_ALWAYS_USE_TMUX is set"
      _echo "to prevent skipping, set \$FORCE_LOAD_MY_ZSH_STUFF"
      return
    fi
  # else - do nothing, therefore continue
  fi
fi

## now this is a one more circuit breaker in case of inside tmux
# if ALL_MY_ZSH_STUFF_LOADED var is set then...
if test -n "${ALL_MY_ZSH_STUFF_LOADED}"; then
  # but also if FORCE_LOAD_MY_ZSH_STUFF var is set then...
  if test -n "${FORCE_LOAD_MY_ZSH_STUFF}"; then
    _echo "\$ALL_MY_ZSH_STUFF_LOADED is set but also \$FORCE_LOAD_MY_ZSH_STUFF is set too. Therefore keep loading."
  else
    _echo "skip loading the rest because \$ALL_MY_ZSH_STUFF_LOADED is set"
    _echo "to prevent skipping, set \$FORCE_LOAD_MY_ZSH_STUFF"
    return
  fi
fi

# make it possible to cancel vi keybinding via $NO_VI_KEY_ON_ZSH
if test -z $NO_VI_KEY_ON_ZSH; then
  set -o vi
else
  set -o emacs
fi

function _tag_zshrc {
  return # comment here to debug performance
  echo zshrc $1
  date +%s%N
}

## addons

_tag_zshrc addon-starts-here
# source from seperate files to organize better
ADDON_D="${my_zsh_d}/my_addons"
for source_file in zinit lf_icons aliases shell_ext
do
  test -f $ADDON_D/$source_file && source $ADDON_D/$source_file
  _tag_zshrc $source_file
done

unfunction _tag_zshrc

# mark the status to prevent double loading
export ALL_MY_ZSH_STUFF_LOADED=1

unfunction _echo
unfunction _load_brew
