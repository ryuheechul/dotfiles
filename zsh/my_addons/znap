# -*- mode: sh; -*- vim: set ft=zsh:

znap_path=~/.local/share/zsh-snap

# Download Znap, if it's not there yet.
[[ -f "${znap_path}/znap.zsh" ]] ||
    git clone --depth 1 -- \
        https://github.com/marlonrichert/zsh-snap.git "${znap_path}"

# Start Znap
source "${znap_path}/znap.zsh"

# starship
# export STARSHIP_LOG=trace
_evalcache starship init zsh # it used to be at ./shell_ext but moved here to show prompt quickly
# `znap prompt` makes your prompt visible in just 15-40ms!

# comment this to prevent any debug messages to disappear or to check any other glitches due to this hack;
# e.g. entering distrobox prints prompts twice on entering - skip this for distrobox as it takes some time anyway
printenv DISTROBOX_ENTER_PATH >/dev/null || znap prompt

## `znap source` automatically downloads and starts your plugins.

# kind of like ls + git status
znap source supercrabtree/k
# bd [n] to go up multi steps at once
znap source Tarrasch/zsh-bd
# git open to open origin via browser
znap source paulirish/git-open

znap source zsh-users/zsh-autosuggestions
znap source zsh-users/zsh-syntax-highlighting
# config for this is found at ./zinit

# intel chip (at least not powerful ones) can't seem to handle this, so make this optional
test -n "${my_zsh_plugin_zsh_autocomplete}" \
    && znap source marlonrichert/zsh-autocomplete

test -f ${XDG_DATA_HOME:-~/.local/share}/zsh/site-functions/_gh || znap fpath _gh 'gh completion -s zsh'

# # `znap function` lets you lazy-load features you don't always need.
# znap function _pyenv pyenvn 'eval "$( pyenv init - --no-rehash )"'
# compctl -K    _pyenv pyenv

# only way to preperly load this file again is to remove from zinit and open a new shell
alias znap-reset="yes | zinit delete ${HOME:1}--.config--dfs-rhc--zsh--my_addons/znap"
alias znap-update="pushd ${znap_path} ; git pull ; popd"
